<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<name>Alert Service</name>

	<groupId>br.ita.bditac</groupId>
	<artifactId>MockAlert</artifactId>
	<version>0.0.1</version>
	<packaging>jar</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.3.3.RELEASE</version>
    </parent>

    <properties>

		<!-- Boot -->
		<start-class>br.ita.bditac.app.Application</start-class>

		<!-- Generic properties -->
		<java.version>1.6</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Spring REST API Documentation -->
        <snippetsDirectory>${project.build.directory}/generated-snippets</snippetsDirectory>
        
	</properties>

	<dependencies>

		<!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Spring REST API Documentation -->
		<dependency> 
		    <groupId>org.springframework.restdocs</groupId>
		    <artifactId>spring-restdocs</artifactId>
		    <version>1.0.0.M1</version>
		    <scope>test</scope>
		</dependency>

		<!-- Spring HATEOAS -->
        <dependency>
            <groupId>org.springframework.hateoas</groupId>
            <artifactId>spring-hateoas</artifactId>
        </dependency>

		<dependency>
			<groupId>org.springframework.plugin</groupId>
			<artifactId>spring-plugin-core</artifactId>
		</dependency>

        <dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-ws</artifactId>
        </dependency>
        <dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-jersey</artifactId>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.3.0</version>
            <scope>test</scope>
        </dependency>
                
	</dependencies>

    <build>
        <plugins>
            <plugin>
          		<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<debug>true</debug>
					<debuglevel>lines,vars,source</debuglevel>
				</configuration>
            </plugin>
            
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            
	        <plugin> 
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-surefire-plugin</artifactId>
	            <configuration>
	                <includes>
	                    <include>**/*Documentation.java</include>
	                </includes>
                    <includes>
                        <include>**/*Tests.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/Abstract*.java</exclude>
                    </excludes>
	                <systemPropertyVariables>
	                    <org.springframework.restdocs.outputDir>
	                        ${snippetsDirectory}
	                    </org.springframework.restdocs.outputDir>
	                </systemPropertyVariables>
	            </configuration>
	        </plugin>
	        
	        <plugin> 
	            <groupId>org.asciidoctor</groupId>
	            <artifactId>asciidoctor-maven-plugin</artifactId>
	            <version>1.5.2</version>
	            <executions>
	                <execution>
	                    <id>generate-docs</id>
	                    <phase>package</phase> 
	                    <goals>
	                        <goal>process-asciidoc</goal>
	                    </goals>
	                    <configuration>
	                        <backend>html</backend>
	                        <doctype>book</doctype>
	                        <attributes>
	                            <snippets>${snippetsDirectory}</snippets>
	                        </attributes>
	                    </configuration>
	                </execution>
	            </executions>
	        </plugin>
			
			<plugin> 
			    <artifactId>maven-resources-plugin</artifactId>
			    <executions>
			        <execution>
			            <id>copy-resources</id>
			            <phase>prepare-package</phase>
			            <goals>
			                <goal>copy-resources</goal>
			            </goals>
			            <configuration>
			                <outputDirectory>
			                    ${project.build.outputDirectory}/static/docs
			                </outputDirectory>
			                <resources>
			                    <resource>
			                        <directory>
			                            ${project.build.directory}/generated-docs
			                        </directory>
			                    </resource>
			                </resources>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>

            <!-- Plugin to generate a Docker image for running this app -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.2.11</version>
                <configuration>
                    <imageName>MockAlert</imageName>
                    <baseImage>java:8</baseImage>
                    <entryPoint>["java", "-Djava.security.egd=file:/dev/./urandom", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
                    <exposes>
                        <expose>8080</expose>
                    </exposes>
                    <!-- copy the service's jar file from target into the root directory of the image -->
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
	        
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>spring-snapshots</id>
            <url>http://repo.spring.io/snapshot</url>
            <snapshots><enabled>true</enabled></snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <url>http://repo.spring.io/milestone</url>
        </repository>
    </repositories>

	<pluginRepositories>
	    <pluginRepository>
	        <id>spring-snapshots</id>
	        <url>http://repo.spring.io/snapshot</url>
	        <snapshots><enabled>true</enabled></snapshots>
	    </pluginRepository>
	    <pluginRepository>
	        <id>spring-milestones</id>
	        <url>http://repo.spring.io/milestone</url>
	    </pluginRepository>
	</pluginRepositories>

</project>
